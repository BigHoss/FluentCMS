@inherits BaseComponent

<nav class=@this.GetClasses() @attributes=AdditionalAttributes>
    <ul>
        <PaginationItem Size=@Size OnClick=@Previous>
            @if (ShowIcons)
            {

                <Icon Name=IconNameEnum.Previous />
            }
            else
            {
                <text>Previous</text>
            }
        </PaginationItem>
        @foreach (var page in Enumerable.Range(1,Total))
        {
            <PaginationItem @key=page Size=@Size OnClick="() => GoTo(page)">
                @(page)
            </PaginationItem>
        }
        <PaginationItem Size=@Size OnClick=@Next>
            @if (ShowIcons)
            {
                <Icon Name=IconNameEnum.Next />
            }
            else
            {
                <text>Next</text>
            }
        </PaginationItem>
    </ul>
</nav>

@code {
    [Parameter]
    public int Current { get; set; } = 0;

    [Parameter]
    public bool ShowIcons { get; set; } = false;

    [Parameter]
    [CssProperty]
    public SizeEnum Size { get; set; } = SizeEnum.Medium;

    [Parameter]
    public int Total { get; set; } = 0;

    [Parameter]
    public EventCallback<int> CurrentChanged { get; set; }

    public bool CanPrevious()
    {
        return Current > 1;
    }

    public bool CanNext()
    {
        return Current < Total;
    }

    public void Previous()
    {
        if (!this.CanPrevious()) return;

        Current--;

        this.CurrentChanged.InvokeAsync(Current);
    }

    public void GoTo(int To)
    {
        if (To == Current) return;

        Current = To;

        this.CurrentChanged.InvokeAsync(Current);
    }

    public void Next()
    {
        if (!this.CanNext()) return;

        Current++;

        this.CurrentChanged.InvokeAsync(Current);
    }
}
