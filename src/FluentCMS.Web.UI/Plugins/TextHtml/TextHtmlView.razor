@using System.Text.Json
@using System.Text
@using FluentCMS.Api.Controllers
@inject HttpClient http

<div style="background-color:lightblue;">
    <pre>
        @(JsonSerializer.Serialize(result, new JsonSerializerOptions() { WriteIndented = true }))
    </pre>
</div>

@code {
    [CascadingParameter(Name = "Plugin")]
    public PluginResponse? Plugin { get; set; }
    private ApiResult<Content>? result;

    protected override async Task OnInitializedAsync()
    {
        var content = new Dictionary<string, object?>
        {
            { "Title", "Hello World" },
            { "Body", "This is a test" },
            { "Number", 123 },
            // {"NullValue", null }
        };
        var serializerOptions = new JsonSerializerOptions();
        serializerOptions.Converters.Add(new JsonContentConverter());

        var response = await http.PostAsJsonAsync("content/TextHtml/create", content, serializerOptions);

        result = await response.Content.ReadFromJsonAsync<ApiResult<Content>>();

        await base.OnInitializedAsync();
    }

    public static Task<HttpResponseMessage> PostJsonAsync(HttpClient httpClient, string url, object body)
    {
        var bodyJson = JsonSerializer.Serialize(body);
        var stringContent = new StringContent(bodyJson, Encoding.UTF8, "application/json");
        return httpClient.PostAsync(url, stringContent);
    }

}
