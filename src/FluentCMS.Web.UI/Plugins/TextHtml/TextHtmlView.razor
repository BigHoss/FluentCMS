@using System.Text.Json
@using System.Text
@using FluentCMS.Api.Controllers
@inject HttpClient http

<div style="background-color:lightblue;">
    <pre>
        @(JsonSerializer.Serialize(result, new JsonSerializerOptions() { WriteIndented = true }))
    </pre>
</div>

@code {
    [CascadingParameter(Name = "Plugin")]
    public PluginResponse? Plugin { get; set; }

    [CascadingParameter]
    public AppState AppState { get; set; } = default!;

    private ApiResult<Content>? result;

    protected override async Task OnInitializedAsync()
    {
        var content = new Content
        {
            { "SiteId", AppState?.Site?.Id },
            { "Int", 123 },
            { "Boolean", true},
            { "DateTime", DateTime.Now},
            { "Decimal", 123.45},
            { "Double", 123.45},
            { "Float", 123.45},
            { "Long", 123},
            { "Short", 123},
            { "String", "Hello World"},
            { "TimeSpan", TimeSpan.FromDays(1)},
            { "Uri", new Uri("https://www.google.com")},
            { "Version", new Version(1,2,3,4)},
            { "Array", new string[] { "Hello", "World" } },
            { "List", new List<string> { "Hello", "World" } },
            // { "Dictionary", new Dictionary<string, object?> { { "Hello", "World" } } },
            // { "Object", new { Hello = "World" } },
            { "NullValue", null }
        };

        var serializerOptions = new JsonSerializerOptions();

        var response = await http.PostAsJsonAsync("content/TextHtml/create", content, serializerOptions);

        result = await response.Content.ReadFromJsonAsync<ApiResult<Content>>();

        await base.OnInitializedAsync();
    }

    public static Task<HttpResponseMessage> PostJsonAsync(HttpClient httpClient, string url, object body)
    {
        var bodyJson = JsonSerializer.Serialize(body);
        var stringContent = new StringContent(bodyJson, Encoding.UTF8, "application/json");
        return httpClient.PostAsync(url, stringContent);
    }

}
