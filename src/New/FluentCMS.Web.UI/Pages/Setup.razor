@page "/setup"
@rendermode InteractiveServer

@inject SiteClient SiteClient
@inject SetupClient SetupClient
@inject ISiteState SiteState
@inject NavigationManager NavigationManager

@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Setup</PageTitle>
<h1>Setup</h1>

@if (SiteState?.Initialized != null && SiteState?.Initialized == false)
{
    <div>
        <div>
            <label for="username">Username</label>
            <InputText @bind-Value=SetupModel.Username id="username" />
        </div>
        <div>
            <label for="email">Email</label>
            <InputText @bind-Value=SetupModel.Email id="email" />
        </div>
        <div>
            <label for="email">Password</label>
            <InputText @bind-Value=SetupModel.Password id="email" />
        </div>
        <button @onclick=SetupStart>Start</button>
    </div>

}
else
{
    <div>
        <p>Site is already initialized</p>
    </div>
}
@code {

    public SetupRequest SetupModel { get; set; } = new SetupRequest
        {
            Username = "admin",
            Email = "admin@example.com",
            Password = "Passw0rd!",
            AppTemplateName = "Blank",
            SiteTemplateName = "Blank"
        };

    protected override void OnInitialized()
    {
        if (SetupClient == null) throw new Exception("SetupClient is null");
        if (SiteClient == null) throw new Exception("SiteClient is null");
        SetupModel.AdminDomain = SiteState.Uri.Authority;
    }

    private void SetupStart()
    {
        var response = SetupClient.StartAsync(SetupModel).Result;

        if (response?.Data != null)
            NavigationManager.NavigateTo("/", true);
    }
}
